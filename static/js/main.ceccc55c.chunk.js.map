{"version":3,"sources":["CartItem.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","id","name","price","qty","updateQty","className","onClick","disabled","Cart","initialItems","initialState","JSON","parse","window","localStorage","getItem","useState","items","setItems","useEffect","setItem","stringify","newQty","newItems","map","item","grandTotal","reduce","total","toFixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAoCeA,MAhCf,YAA0D,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,UAUvC,OACI,sBAAKC,UAAU,WAAf,UAEI,8BACKJ,IAGL,oCACMC,KAGN,gCACI,wBAAQI,QAhBA,WAChBF,EAAUJ,EAAIG,EAAM,IAekBI,SAAUJ,GAAO,EAA/C,eACCA,EACD,wBAAQG,QAtBL,WACXF,EAAUJ,EAAIG,EAAM,IAqBZ,kBAGJ,0CAAaA,EAAMD,S,MCgBhBM,MAzCf,YAAmC,IAAlBC,EAAiB,EAAjBA,aAEPC,EAAeC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAF9B,EAGFC,mBAASN,GAAgBD,GAHvB,mBAGtBQ,EAHsB,KAGfC,EAHe,KAK9BC,qBAAU,WACNN,OAAOC,aAAaM,QAAQ,QAAST,KAAKU,UAAUJ,MACrD,CAACA,IAEJ,IAAMb,EAAY,SAACJ,EAAIsB,GACnB,IAAMC,EAAWN,EAAMO,KAAI,SAAAC,GACvB,OAAGA,EAAKzB,KAAOA,EACX,2BAAUyB,GAAV,IAAgBtB,IAAKmB,IAElBG,KAEXP,EAASK,IAGPG,EAAaT,EAAMU,QAAO,SAACC,EAAOH,GAAR,OAC5BG,EAAQH,EAAKtB,IAAMsB,EAAKvB,QACzB,GAAG2B,QAAQ,GAEd,OACI,sBAAKxB,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,2BACA,qBAAKA,UAAU,aAAf,SACKY,EAAMO,KAAI,SAAAC,GAAI,OACX,cAAC,EAAD,2BAEQA,GAFR,IAGIrB,UAAWA,IAFNqB,EAAKzB,SAMtB,qBAAIK,UAAU,aAAd,2BAA0CqB,SCvChDT,EAAQ,CACZ,CAAEjB,GAAI,EAAGC,KAAM,gBAAiBC,MAAO,KAAMC,IAAK,GAClD,CAAEH,GAAI,EAAGC,KAAM,SAAUC,MAAO,KAAMC,IAAK,GAC3C,CAAEH,GAAI,EAAGC,KAAM,UAAWC,MAAO,IAAMC,IAAK,IAW/B2B,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,CAAMI,aAAcQ,OCCXc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ceccc55c.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"./CartItem.css\"\n\nfunction CartItem( { id, name, price, qty, updateQty } ) {\n\n    const addOne = () => {\n        updateQty(id, qty + 1);\n    }\n\n    const subtractOne = () => {\n        updateQty(id, qty - 1);\n    }\n\n    return(\n        <div className=\"CartItem\">\n\n            <div>\n                {name}\n            </div>\n\n            <div>\n                ${price}\n            </div>\n\n            <div>\n                <button onClick={subtractOne} disabled={qty <= 0}>-</button>\n                {qty}\n                <button onClick={addOne}>+</button>\n            </div>\n\n            <div>Total: {qty * price}</div>\n        </div>\n    )\n}\n\nexport default CartItem;\n","import React, { useState, useEffect } from \"react\";\n\nimport CartItem from \"./CartItem\";\n\nimport \"./Cart.css\"\n\nfunction Cart( { initialItems } ) {\n\n    const initialState = JSON.parse(window.localStorage.getItem(\"items\"));\n    const [ items, setItems ] = useState(initialState || initialItems);\n\n    useEffect(() => {\n        window.localStorage.setItem(\"items\", JSON.stringify(items));\n    }, [items]);\n\n    const updateQty = (id, newQty) => {\n        const newItems = items.map(item => {\n            if(item.id === id) {\n                return{...item, qty: newQty}\n            }\n            return item;\n        });\n        setItems(newItems);\n    }\n\n    const grandTotal = items.reduce((total, item) => (\n        total + item.qty * item.price\n    ), 0).toFixed(2);\n\n    return(\n        <div className=\"Cart\">\n            <h1 className=\"Cart-title\">Shopping Cart</h1>\n            <div className=\"Cart-items\">\n                {items.map(item => (\n                    <CartItem \n                        key={item.id} \n                        {...item}\n                        updateQty={updateQty}    \n                    />\n                ))}\n            </div>\n            <h2 className=\"Cart-total\">Grand Total: ${grandTotal}</h2>\n        </div>\n    )\n\n}\n\nexport default Cart;","import Cart from \"./Cart\";\n\nconst items = [\n  { id: 1, name: \"Garlic powder\", price: 2.25, qty: 1},\n  { id: 2, name: \"Butter\", price: 1.75, qty: 3},\n  { id: 3, name: \"Sirloin\", price: 7.50, qty: 5}\n]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cart initialItems={items} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}